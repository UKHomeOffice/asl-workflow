#!/usr/bin/env node
try {
  // eslint-disable-next-line
  require('dotenv/config');
} catch (e) {
  // ignore
}
const { exec } = require('child_process');

const jobs = [
  'deadline-has-passed',
  'discard-expired-projects',
  'project-refusal-deadline-passed'
];

const executeJobs = async () => {
  let hasFailure = false;
  for (const job of jobs) {
    console.log(`Executing job ${job}`);
    await new Promise((resolve, reject) => {
      exec(`./bin/${job}`, (error, stdout, stderr) => {
        if (stdout) {
          console.log(stdout);
        }
        if (stderr) {
          console.error(stderr);
        }
        return error ? reject(error) : resolve();
      });
    }).catch(e => {
      console.error(`Error executing job ${job}`, { message: e.message, stack: e.stack, ...e });
      hasFailure = true;
    });
  }
  if (hasFailure) {
    process.exit(1);
  }
};

executeJobs()
  .then(() => process.exit(0))
  .catch(e => {
    console.error({ message: e.message, stack: e.stack, ...e });
    process.exit(1);
  });
